<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-createfiles">
  <?dbhtml filename="createfiles.html"?>

  <title>Creating Essential Files and Symlinks</title>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/passwd">/etc/passwd</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/group">/etc/group</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/run/utmp">/var/run/utmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/btmp">/var/log/btmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/lastlog">/var/log/lastlog</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/wtmp">/var/log/wtmp</primary>
  </indexterm>

  <para>Some programs use hard-wired paths to programs which do not exist yet. In
  order to satisfy these programs, create a number of symbolic links which will be
  replaced by real files throughout the course of this chapter after the software
  has been installed:</para>

<screen><userinput>ln -sv /tools/bin/cat /tools/bin/echo /tools/bin/pwd /tools/bin/sh /tools/bin/stty /bin
ln -sv /tools/bin/perl /usr/bin
ln -sv /tools/lib/libgcc_s.so /tools/lib/libgcc_s.so.1 /usr/lib
ln -sv /tools/lib/libstdc++.so /tools/lib/libstdc++.so.6 /usr/lib
sed 's/tools/usr/' /tools/lib/libstdc++.la > /usr/lib/libstdc++.la</userinput></screen>

  <variablelist>
    <title>The purpose of each link:</title>

    <varlistentry>
      <term><parameter><filename>/bin/cat</filename></parameter></term>
      <listitem>
        <para>This pathname is hard-coded into Glibc's configure script.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/echo</filename></parameter></term>
      <listitem>
        <para>This is to satisfy one of the tests in Glibc's test suite, which
        expects <filename>/bin/echo</filename>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/pwd</filename></parameter></term>
      <listitem>
        <para>Some <command>configure</command> scripts, particularly Glibc's,
        have this pathname hard-coded.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/sh</filename></parameter></term>
      <listitem>
        <para>Many shell scripts hard-code <filename>/bin/sh</filename>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/stty</filename></parameter></term>
      <listitem>
        <para>This pathname is hard-coded into Expect, therefore it is needed
        for Binutils and GCC test suites to pass.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/usr/bin/perl</filename></parameter></term>
      <listitem>
        <para>Many Perl scripts hard-code this path to the
        <command>perl</command> program.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/usr/lib/libgcc_s.so /usr/lib/libgcc_s.so.1</filename></parameter></term>
      <listitem>
        <para>Glibc needs this for the pthreads library to work.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/usr/lib/libstdc++.so /usr/lib/libstdc++.so.6</filename></parameter></term>
      <listitem>
        <para>This is needed by several tests in Glibc's test suite, as well as
        for C++ support in GMP.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/usr/lib/libstdc++.la</filename></parameter></term>
      <listitem>
        <para>This prevents a <filename class="directory">/tools</filename>
        reference that would otherwise be in
        <filename>/usr/lib/libstdc++.la</filename> after GCC is installed.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Historically, Linux maintains a list of the mounted file systems in the
  file <filename>/etc/mtab</filename>. Modern kernels maintain this list
  internally and exposes it to the user via the <filename
  class="directory">/proc</filename> filesystem. To satisfy utilities that
  expect the presence of <filename>/etc/mtab</filename>, create the following
  symbolic link:</para>

<screen><userinput>ln -sv /proc/self/mounts /etc/mtab</userinput></screen>

  <para>In order for user <systemitem class="username">root</systemitem> to be
  able to login and for the name <quote>root</quote> to be recognized, there
  must be relevant entries in the <filename>/etc/passwd</filename> and
  <filename>/etc/group</filename> files. To enable shadowed passwords, the
  <filename>/etc/shadow</filename> file must exist.</para>

  <para>Create the <filename>/etc/passwd</filename>, <filename>/etc/group</filename>,
  and <filename>/etc/shadow</filename> files by running the following commands:</para>

<screen><userinput>touch /etc/passwd /etc/group /etc/shadow
chmod -v 0400 /etc/shadow
adduser -u 0 -g root -h /root -s /bin/sh -H -D root
adduser -u 1 -g bin -h /dev/null -s /bin/false -H -D bin
addgroup -g 2 sys
addgroup -g 3 kmem
addgroup -g 4 tape
addgroup -g 5 tty
addgroup -g 6 daemon
addgroup -g 7 floppy
addgroup -g 8 disk
addgroup -g 9 lp
addgroup -g 10 dialout
addgroup -g 11 audio
addgroup -g 12 video
addgroup -g 13 utmp
addgroup -g 14 usb
addgroup -g 15 cdrom
addgroup -g 24 uucp
addgroup -g 28 wheel
addgroup -g 34 mail
addgroup -g 61 kvm
addgroup -g 99 nogroup
adduser -u 99 -G nogroup -g 'Unprivileged User' -h /dev/null -s /bin/false -H -D nobody</userinput></screen>

  <para>The created groups are not part of any standard&mdash;they are groups
  decided on in part by the requirements of the <command>mdev</command> configuration in this
  chapter, and in part by common convention employed by a number of existing
  Linux distributions. The Linux Standard Base (LSB, available at <ulink
  url="http://www.linuxbase.org"/>) recommends only that, besides the group
  <systemitem class="groupname">root</systemitem> with a Group ID (GID) of 0,
  a group <systemitem class="groupname">bin</systemitem> with a GID of 1 be
  present. All other group names and GIDs can be chosen freely by the system
  administrator since well-written programs do not depend on GID numbers, but
  rather use the group's name.</para>

  <para>The <command>login</command>, <command>agetty</command>, and
  <command>init</command> programs (and others) use a number of log
  files to record information such as who was logged into the system and
  when. However, these programs will not write to the log files if they
  do not already exist. Initialize the log files and give them
  proper permissions:</para>

<screen><userinput>touch /var/log/btmp /var/log/lastlog /var/log/wtmp
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp</userinput></screen>

  <para>The <filename>/var/log/wtmp</filename> file records all logins and
  logouts. The <filename>/var/log/lastlog</filename> file records when each
  user last logged in. The <filename>/var/log/btmp</filename> file records the
  bad login attempts.</para>

  <note><para>The <filename>/run/utmp</filename> file records the users that
  are currently logged in.  This file is created dynamically in the boot
  scripts.</para></note>

</sect1>

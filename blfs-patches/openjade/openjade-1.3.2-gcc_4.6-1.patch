Submitted By:            Matt Burgess <matthew_at_linuxfromscratch_dot_org>
Date:                    2011-03-30
Initial Package Version: 1.3.2
Upstream Status:         Not submitted
Origin:                  Matt Burgess
Description:             Fixes compilation issues with GCC-4.6.0.

diff -Naur openjade-1.3.2.orig/jade/TeXFOTBuilder.cxx openjade-1.3.2/jade/TeXFOTBuilder.cxx
--- openjade-1.3.2.orig/jade/TeXFOTBuilder.cxx	2002-01-15 10:35:37.000000000 +0000
+++ openjade-1.3.2/jade/TeXFOTBuilder.cxx	2011-03-30 09:39:46.000000000 +0000
@@ -75,6 +75,7 @@
     virtual void end(TeXFOTBuilder &) const = 0;
   };
   class PageFloatFlowObj : public TeXCompoundExtensionFlowObj {
+  public:
     void start(TeXFOTBuilder &fotb, const NodePtr &) const {
       fotb.startPageFloat(nic_);
     }
@@ -88,12 +89,14 @@
       value.convertString(nic_.placement);
       }
     ExtensionFlowObj *copy() const { return new PageFloatFlowObj(*this); }
+    PageFloatFlowObj() {}
   private:
     PageFloatNIC nic_;
     StringC name_;
     StringC placement;
   };
   class PageFootnoteFlowObj : public TeXCompoundExtensionFlowObj {
+  public:
     void start(TeXFOTBuilder &fotb, const NodePtr &) const {
       fotb.startPageFootnote();
     }
@@ -101,6 +104,7 @@
       fotb.endPageFootnote();
     }
     ExtensionFlowObj *copy() const { return new PageFootnoteFlowObj(*this); }
+    PageFootnoteFlowObj() {}
   private:
   };
   //////////////////////////////////////////////////////////////////////
diff -Naur openjade-1.3.2.orig/jade/TransformFOTBuilder.cxx openjade-1.3.2/jade/TransformFOTBuilder.cxx
--- openjade-1.3.2.orig/jade/TransformFOTBuilder.cxx	2002-12-01 14:55:51.000000000 +0000
+++ openjade-1.3.2/jade/TransformFOTBuilder.cxx	2011-03-30 09:38:48.000000000 +0000
@@ -51,6 +51,7 @@
       value.convertString(name_);
     }
     ExtensionFlowObj *copy() const { return new EntityRefFlowObj(*this); }
+    EntityRefFlowObj() {}
   private:
     StringC name_;
   };
@@ -66,10 +67,12 @@
       value.convertString(data_);
     }
     ExtensionFlowObj *copy() const { return new ProcessingInstructionFlowObj(*this); }
+    ProcessingInstructionFlowObj() {}
   private:
     StringC data_;
   };
   class EmptyElementFlowObj : public TransformExtensionFlowObj {
+  public:
     void atomic(TransformFOTBuilder &fotb, const NodePtr &nd) const {
       if (nic_.gi.size() > 0)
 	fotb.emptyElement(nic_);
@@ -98,10 +101,12 @@
       }
     }
     ExtensionFlowObj *copy() const { return new EmptyElementFlowObj(*this); }
+    EmptyElementFlowObj() {}
   private:
     ElementNIC nic_;
   };
   class ElementFlowObj : public TransformCompoundExtensionFlowObj {
+  public:
     void start(TransformFOTBuilder &fotb, const NodePtr &nd) const {
       if (nic_.gi.size() > 0)
 	fotb.startElement(nic_);
@@ -133,10 +138,12 @@
       }
     }
     ExtensionFlowObj *copy() const { return new ElementFlowObj(*this); }
+    ElementFlowObj() {}
   private:
     ElementNIC nic_;
   };
   class EntityFlowObj : public TransformCompoundExtensionFlowObj {
+  public:
     void start(TransformFOTBuilder &fotb, const NodePtr &) const {
       fotb.startEntity(systemId_);
     }
@@ -150,10 +157,12 @@
       value.convertString(systemId_);
     }
     ExtensionFlowObj *copy() const { return new EntityFlowObj(*this); }
+    EntityFlowObj() {}
   private:
     StringC systemId_;
   };
   class DocumentTypeFlowObj : public TransformExtensionFlowObj {
+  public:
     void atomic(TransformFOTBuilder &fotb, const NodePtr &nd) const {
       fotb.documentType(nic_);
     }
@@ -174,6 +183,7 @@
       }
     }
     ExtensionFlowObj *copy() const { return new DocumentTypeFlowObj(*this); }
+    DocumentTypeFlowObj() {}
   private:
     DocumentTypeNIC nic_;
   };


<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-profile">
  <?dbhtml filename="profile.html"?>

  <title>The Bash Shell Startup Files</title>

  <para>The shell program <filename>/bin/bash</filename> (hereafter
  referred to as just "the shell") uses a collection of startup files to
  help create an environment.  Each file has a specific use and
  may affect login and interactive environments differently.  The files in
  the <filename class="directory">/etc</filename> directory generally provide
  global settings. If an equivalent file exists in your home directory it may
  override the global settings.</para>

  <para>An interactive login shell is started after a successful login, using
  <filename>/bin/login</filename>, by reading the <filename>/etc/passwd</filename>
  file.  This shell invocation normally reads <filename>/etc/profile</filename>
  and its private equivalent <filename>~/.bash_profile</filename> upon
  startup.</para>

  <para>An interactive non-login shell is normally started at the command-line
  using a shell program (e.g.,
  <prompt>[prompt]$</prompt><command>/bin/bash</command>) or by the
  <command>/bin/su</command> command.  An interactive non-login shell is also
  started with a terminal program such as <command>xterm</command>
  from within a graphical environment. This type of
  shell invocation normally copies the parent environment and then reads the
  user's <filename>~/.bashrc</filename> file for additional startup configuration
  instructions.</para>

  <para>A non-interactive shell is usually present when a shell script is
  running.  It is non-interactive because it is processing a script and not
  waiting for user input between commands. For these shell invocations, only
  the environment inherited from the parent shell is used.</para>

  <para> The file <filename>~/.bash_logout</filename> is not used for an
  invocation of the shell.  It is read and executed when a user exits from an
  interactive login shell.</para>

  <para>Many distributions use <filename>/etc/bashrc</filename> for system wide
  initialization of non-login shells. This file is usually called from the
  user's <filename>~/.bashrc</filename> file and is not built directly into
  <command>bash</command> itself.  This convention is followed in this
  section.</para>

  <sect2>
    <title>/etc/profile</title>

    <para>Here is a base <filename>/etc/profile</filename>. This file starts by
    setting up some helper functions and some basic parameters.  It specifies some
    <command>bash</command> history parameters and, for security purposes,
    disables keeping a permanent history file for the <systemitem
    class="username">root</systemitem> user.  It also sets a
    default user prompt.  It then calls small, single purpose scripts in the
    <filename class='directory'>/etc/profile.d</filename> directory to provide most
    of the initialization.</para>

<screen><userinput>cat &gt; /etc/profile &lt;&lt; "EOF"
<literal># Begin /etc/profile
# Written for Beyond Linux From Scratch
# by James Robertson &lt;jameswrobertson@earthlink.net&gt;
# modifications by Dagmar d'Surreal &lt;rivyqntzne@pbzpnfg.arg&gt;

# System wide environment variables and startup programs.

# System wide aliases and functions should go in /etc/bashrc.  Personal
# environment variables and startup programs should go into
# ~/.bash_profile.  Personal aliases and functions should go into
# ~/.bashrc.

# Set the initial path
PATH=/bin:/usr/bin

if [ $(id -u) -eq 0 ] ; then
        PATH=$PATH:/sbin:/usr/sbin
        unset HISTFILE
fi

export PATH

# Setup some environment variables.
HISTSIZE=1000 ; export HISTSIZE
HISTIGNORE="&amp;:[bf]g:exit" ; export HISTIGNORE

# Set some defaults for graphical systems
XDG_DATA_DIRS=/usr/share ; export XDG_DATA_DIRS

# Setup a red prompt for root and a green one for users.
NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [ $(id -u) -eq 0 ] ; then
  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi

for script in /etc/profile.d/*.sh ; do
        if [ -r $script ] ; then
                . $script
        fi
done

# End /etc/profile</literal>
EOF</userinput></screen>

    <sect3>
      <title>The /etc/profile.d Directory</title>

      <para>Now create the <filename class='directory'>/etc/profile.d</filename>
      directory, where the individual initialization scripts are placed:</para>

<screen><userinput>install -v --directory --mode=0755 --owner=root --group=root /etc/profile.d</userinput></screen>

    </sect3>

    <sect3>
      <title>/etc/profile.d/extrapaths.sh</title>

      <para>This script adds several useful paths to the <envar>PATH</envar> and
      <envar>PKG_CONFIG_PATH</envar> environment variables.  If you want, you
      can uncomment the last section to put a dot at the end of your path. This will
      allow executables in the current working directory to be executed without
      specifying a ./, however you are warned that this is generally considered a
      security hazard.</para>

<screen><userinput>cat &gt; /etc/profile.d/extrapaths.sh &lt;&lt; "EOF"
<literal>if [ -d /usr/local/lib/pkgconfig ] ; then
        pathappend /usr/local/lib/pkgconfig PKG_CONFIG_PATH
fi
if [ -d /usr/local/bin ]; then
        pathprepend /usr/local/bin
fi
if [ -d /usr/local/sbin -a $EUID -eq 0 ]; then
        pathprepend /usr/local/sbin
fi

if [ -d ~/bin ]; then
        pathprepend ~/bin
fi
#if [ $EUID -gt 99 ]; then
#        pathappend .
#fi</literal>
EOF</userinput></screen>

    </sect3>

    <sect3>
      <title>/etc/profile.d/readline.sh</title>

      <para>This script sets up the default <filename>inputrc</filename>
      configuration file. If the user does not have individual settings, it uses the
      global file.</para>

<screen><userinput>cat &gt; /etc/profile.d/readline.sh &lt;&lt; "EOF"
<literal># Setup the INPUTRC environment variable.
if [ -z "$INPUTRC" -a ! -f "$HOME/.inputrc" ] ; then
        INPUTRC=/etc/inputrc
fi
export INPUTRC</literal>
EOF</userinput></screen>

    </sect3>

    <sect3>
      <title>/etc/profile.d/umask.sh</title>

      <para>Setting the <command>umask</command> value is important for security.
      Here the default group write permissions are turned off for system users and when
      the user name and group name are not the same.</para>

<screen><userinput>cat &gt; /etc/profile.d/umask.sh &lt;&lt; "EOF"
<literal># By default, the umask should be set.
if [ "$(id -gn)" = "$(id -un)" -a $EUID -gt 99 ] ; then
  umask 002
else
  umask 022
fi</literal>
EOF</userinput></screen>

    </sect3>

    <sect3>
      <title>/etc/profile.d/i18n.sh</title>

      <para>This script sets an environment variable necessary for
      native language support.</para>

<screen><userinput>cat &gt; /etc/profile.d/i18n.sh &lt;&lt; "EOF"
<literal># Set up i18n variables
export LANG=en_US.UTF-8</literal>
EOF</userinput></screen>

    </sect3>

    <sect3>
      <title>Other Initialization Values</title>

      <para>Other initialization can easily be added to the
      <filename>profile</filename> by adding additional scripts to the
      <filename class='directory'>/etc/profile.d</filename> directory.</para>

    </sect3>

  </sect2>

  <sect2>
    <title>/etc/bashrc</title>

    <para>Here is a base <filename>/etc/bashrc</filename>.  Comments in the
    file should explain everything you need.</para>

<screen><userinput>cat &gt; /etc/bashrc &lt;&lt; "EOF"
<literal># Begin /etc/bashrc
# Written for Beyond Linux From Scratch
# by James Robertson &lt;jameswrobertson@earthlink.net&gt;
# updated by Bruce Dubbs &lt;bdubbs@linuxfromscratch.org&gt;

# System wide aliases and functions.

# System wide environment variables and startup programs should go into
# /etc/profile.  Personal environment variables and startup programs
# should go into ~/.bash_profile.  Personal aliases and functions should
# go into ~/.bashrc

# Provides colored /bin/ls command.  Used in conjunction
# with code in /etc/profile.

alias ls='ls --color=auto'

# Provides prompt for non-login shells, specifically shells started
# in the X environment. [Review the LFS archive thread titled
# PS1 Environment Variable for a great case study behind this script
# addendum.]

NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [[ $EUID == 0 ]] ; then
  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi

# Turn off hash function
set +h

# End /etc/bashrc</literal>
EOF</userinput></screen>

  </sect2>

</sect1>

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY unzip-homepage      "http://www.info-zip.org/UnZip.html">
  <!ENTITY unzip-wikipedia     "http://en.wikipedia.org/wiki/Info-ZIP">
  <!ENTITY unzip-download-http "&sourceforge-repo;/infozip/unzip60.tar.gz">
  <!ENTITY unzip-download-ftp  " ">
  <!ENTITY unzip-md5sum        "62b490407489521db863b523a7f86375">
  <!ENTITY unzip-size          "1.3 MB">
  <!ENTITY unzip-buildsize     "9 MB">
  <!ENTITY unzip-time          "Less than 0.1 SBU">
]>

<sect1 id="unzip" xreflabel="UnZip-&unzip-version;">
  <?dbhtml filename="unzip.html"?>

  <title>UnZip-&unzip-version;</title>

  <indexterm zone="unzip">
    <primary sortas="a-UnZip">UnZip</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction</title>

    <para>
      The UnZip package contains <filename>ZIP</filename> extraction utilities.
      These are useful for extracting files from <filename>ZIP</filename>
      archives. <filename>ZIP</filename> archives are created with PKZIP or
      Info-ZIP utilities, primarily in a DOS environment.
    </para>

    <caution>
      <para>
        The previous version of the UnZip package had some locale related
        issues. Currently there are no BLFS editors capable of testing these
        local issues. Therefore, the locale related information is left on this
        page, but has not been tested. A more general discussion of these
        problems can be found in the <xref linkend="locale-assumed-encoding"/>
        section of the <xref linkend="locale-issues"/> page.
      </para>
    </caution>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&unzip-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&unzip-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (HTTP): <ulink url="&unzip-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&unzip-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &unzip-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &unzip-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &unzip-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &unzip-time;
        </para>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2 id="unzip-locale-issues">
    <title>UnZip Locale Issues</title>

    <note>
      <para>
        Use of UnZip in the JDK, Mozilla, DocBook or any other BLFS package
        installation is not a problem, as BLFS instructions never use UnZip to
        extract a file with non-ASCII characters in the file's name.
      </para>
    </note>

    <para>
      The UnZip package assumes that filenames stored in the ZIP archives
      created on non-Unix systems are encoded in CP850, and that they should be
      converted to ISO-8859-1 when writing files onto the filesystem. Such
      assumptions are not always valid. In fact, inside the ZIP archive,
      filenames are encoded in the DOS codepage that is in use in the relevant
      country, and the filenames on disk should be in the locale encoding. In MS
      Windows, the OemToChar() C function (from <filename>User32.DLL</filename>)
      does the correct conversion (which is indeed the conversion from CP850 to
      a superset of ISO-8859-1 if MS Windows is set up to use the US English
      language), but there is no equivalent in Linux.
    </para>

    <para>
      When using <command>unzip</command> to unpack a ZIP archive containing
      non-ASCII filenames, the filenames are damaged because
      <command>unzip</command> uses improper conversion when any of its encoding
      assumptions are incorrect. For example, in the ru_RU.KOI8-R locale,
      conversion of filenames from CP866 to KOI8-R is required, but conversion
      from CP850 to ISO-8859-1 is done, which produces filenames consisting of
      undecipherable characters instead of words (the closest equivalent
      understandable example for English-only users is rot13). There are several
      ways around this limitation:
    </para>

    <para>
      1) For unpacking ZIP archives with filenames containing non-ASCII
      characters, use <ulink url="http://www.winzip.com/">WinZip</ulink> while
      running the <ulink url="http://www.winehq.com/">Wine</ulink> Windows
      emulator.
    </para>

    <para>
      2) After running <command>unzip</command>, fix the damage made to the
      filenames using the <command>convmv</command> tool (<ulink
      url="http://j3e.de/linux/convmv/"/>). The following is an example for the
      ru_RU.KOI8-R locale:
    </para>

    <blockquote>
      <para>
        Step 1. Undo the conversion done by <command>unzip</command>:
      </para>

<screen><userinput>convmv -f iso-8859-1 -t cp850 -r --nosmart --notest \
    <replaceable>&lt;/path/to/unzipped/files&gt;</replaceable></userinput></screen>

      <para>
        Step 2. Do the correct conversion instead:
      </para>

<screen><userinput>convmv -f cp866 -t koi8-r -r --nosmart --notest \
    <replaceable>&lt;/path/to/unzipped/files&gt;</replaceable></userinput></screen>

    </blockquote>

  </sect2>

  <sect2 role="installation">
    <title>Installation</title>

<screen><userinput>case `uname -m` in
  i?86)
    sed -i -e 's/DASM"/DASM -DNO_LCHMOD"/' unix/Makefile
    make -f unix/Makefile linux
    ;;
  *)
    sed -i -e 's/CFLAGS="-O -Wall/&amp; -DNO_LCHMOD/' unix/Makefile
    make -f unix/Makefile linux_noasm
    ;;
esac</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make prefix=/usr install</userinput></screen>

    <sect3>
      <title>Command Explanations</title>

      <para>
        <command>sed ...</command>: This command ensures an obsolete system call
        is not made.
      </para>

      <para>
        <parameter>linux, linux_noasm</parameter>: The linux target in the
        <filename>Makefile</filename> makes assumptions that are useful for a
        Linux system when compiling the executables, but also uses some 32-bit
        x86 assembler code. The linux_noasm target will build on all linux
        hosts. To obtain alternatives to these targets, use <command>make -f
        unix/Makefile list</command> command.
      </para>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <indexterm zone="unzip">
      <primary sortas="b-funzip">funzip</primary>
    </indexterm>
    <indexterm zone="unzip">
      <primary sortas="b-unzip">unzip</primary>
    </indexterm>
    <indexterm zone="unzip">
      <primary sortas="b-unzipsfx">unzipsfx</primary>
    </indexterm>
    <indexterm zone="unzip">
      <primary sortas="b-zipgrep">zipgrep</primary>
    </indexterm>
    <indexterm zone="unzip">
      <primary sortas="b-zipinfo">zipinfo</primary>
    </indexterm>

<screen><literal>/usr/bin/funzip
/usr/bin/unzip
/usr/bin/unzipsfx
/usr/bin/zipgrep
/usr/bin/zipinfo
/usr/man/man1/funzip.1
/usr/man/man1/unzip.1
/usr/man/man1/unzipsfx.1
/usr/man/man1/zipgrep.1
/usr/man/man1/zipinfo.1</literal></screen>

  </sect2>

</sect1>

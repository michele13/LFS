<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY llvm-homepage      "http://www.llvm.org/">
  <!ENTITY llvm-wikipedia     "https://en.wikipedia.org/wiki/LLVM">
  <!ENTITY llvm-download-http
  "http://llvm.org/releases/&llvm-version;/llvm-&llvm-version;.src.tar.gz">
  <!ENTITY llvm-download-ftp  " ">
  <!ENTITY llvm-md5sum        "40564e1dc390f9844f1711c08b08e391">
  <!ENTITY llvm-size          "13 MB">
  <!ENTITY llvm-buildsize     "900 MB">
  <!ENTITY llvm-time          "13 SBU (additional 7.0 SBU for Clang)">

  <!ENTITY clang-download-http
  "http://llvm.org/releases/&llvm-version;/cfe-&llvm-version;.src.tar.gz">
  <!ENTITY clang-md5sum        "8284891e3e311829b8e44ac813d0c9ef">
  <!ENTITY clang-size          "9.0 MB">

  <!ENTITY compiler-rt-download-http
  "http://llvm.org/releases/&llvm-version;/compiler-rt-&llvm-version;.src.tar.gz">
  <!ENTITY compiler-rt-md5sum        "9c129ce24514467cfe492cf2fed8e2c4">
  <!ENTITY compiler-rt-size          "1.5 MB">
]>

<sect1 id="llvm" xreflabel="LLVM-&llvm-version;">
  <?dbhtml filename="llvm.html" ?>

  <title>LLVM-&llvm-version;</title>

  <sect2>
    <title>Introduction</title>

    <para>
      The LLVM package contains a collection of modular and reusable compiler
      and toolchain technologies. The Low Level Virtual Machine (LLVM) Core
      libraries provide a modern source and target-independent optimizer, along
      with code generation support for many popular CPUs (as well as some less
      common ones!). These libraries are built around a well specified code
      representation known as the LLVM intermediate representation ("LLVM IR").
    </para>

    <para>
      The optional Clang and Compiler RT packages provide a new C, C++,
      Objective C and Objective C++ front-ends and runtime libraries for the
      LLVM.
    </para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&llvm-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&llvm-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (HTTP): <ulink url="&llvm-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&llvm-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &llvm-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &llvm-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &llvm-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &llvm-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Optional Downloads</bridgehead>

    <bridgehead renderas="sect4">Clang</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download: <ulink url="&clang-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &clang-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &clang-size;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect4">Compiler RT</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download: <ulink url="&compiler-rt-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &compiler-rt-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &compiler-rt-size;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependencies</bridgehead>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="libffi"/> and
      <xref linkend="python2"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="doxygen"/>,
      <xref linkend="graphviz"/>,
      <xref linkend="libxml2"/>,
      <xref linkend="zip"/>,
      <ulink url="http://www.ocaml.org/">OCaml</ulink>,
      <ulink url="http://pypi.python.org/pypi/Sphinx">Sphinx</ulink> and
      <ulink url="http://www.valgrind.org/">Valgrind</ulink>
    </para>

  </sect2>

  <sect2>
    <title>Installation</title>

    <para>
      If you have downloaded the optional packages, install them into the source
      tree by running the following commands:
    </para>

<screen><userinput>tar xvf ../cfe-&llvm-version;.src.tar.gz -C tools &amp;&amp;
tar xvf ../compiler-rt-&llvm-version;.src.tar.gz -C projects &amp;&amp;
mv -v tools/cfe-&llvm-version;.src tools/clang &amp;&amp;
mv -v projects/compiler-rt-&llvm-version;.src projects/compiler-rt</userinput></screen>

    <para>
      Install LLVM by running the following commands:
    </para>

<screen><userinput>sed -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    -i Makefile.config.in &amp;&amp;
CC=gcc CXX=g++ \
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --enable-libffi \
            --enable-optimized \
            --enable-shared \
            --enable-targets=all \
            --disable-assertions \
            --disable-debug-runtime \
            --disable-expensive-checks \
            --enable-experimental-targets=R600 &amp;&amp;
make</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
for file in /usr/lib/lib{clang,LLVM,LTO,profile_rt}*.a
do
  test -f $file &amp;&amp; chmod -v 644 $file
done</userinput></screen>

    <para>
      If you had Python installed and you have built Clang, install the Clang
      Analyzer by running the following command as the <systemitem
      class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>install -v -dm755 /usr/lib/clang-analyzer &amp;&amp;
for prog in scan-build scan-view
do
  cp -rfv tools/clang/tools/$prog /usr/lib/clang-analyzer/
  ln -sfv ../lib/clang-analyzer/$prog/$prog /usr/bin/
done &amp;&amp;
ln -sfv /usr/bin/clang /usr/lib/clang-analyzer/scan-build/ &amp;&amp;
mv -v /usr/lib/clang-analyzer/scan-build/scan-build.1 /usr/share/man/man1/</userinput></screen>

    <sect3>
      <title>Command Explanations</title>

      <para>
        <command>sed -e ...</command>: This sed fixes location of the installed
        documentation.
      </para>

      <para>
        <parameter>--enable-libffi</parameter>: This switch enables LLVM to use
        libffi. Remove if you did not install libffi.
      </para>

      <para>
        <parameter>--enable-optimized</parameter>: This switch enables compiler
        optimizations in order to speed up the code and reduce its size.
      </para>

      <para>
        <parameter>--enable-shared</parameter>: This switch enables building of
        the LLVM shared library which contains all of static libraries linked
        into single library.
      </para>

      <para>
        <parameter>--enable-targets=all</parameter>: This switch ensures that
        all LLVM targets are built.
      </para>

      <para>
        <parameter>--disable-*</parameter>: These switches disable features
        which are used for debugging and are not necessary on a production
        system.
      </para>

      <para>
        <parameter>--enable-experimental-targets=R600</parameter>: This switch
        enables R600 target which is required by Mesa to build the radeonsi 3D
        driver. It can be used for R600 LLVM backend and OpenCL state tracker in
        Mesa.
      </para>

    </sect3>

  </sect2>

  <sect2>
    <title>Contents</title>

    <indexterm zone="llvm">
      <primary sortas="b-bugpoint">bugpoint</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-c-index-test">c-index-test</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-clang">clang</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-clang++">clang++</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-clang-check">clang-check</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-clang-format">clang-format</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-clang-tblgen">clang-tblgen</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llc">llc</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-lli">lli</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-ar">llvm-ar</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-as">llvm-as</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-bcanalyzer">llvm-bcanalyzer</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-config">llvm-config</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-cov">llvm-cov</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-diff">llvm-diff</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-dis">llvm-dis</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-dis">llvm-dwarfdump</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-extract">llvm-extract</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-link">llvm-link</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-mc">llvm-mc</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-mcmarkup">llvm-mcmarkup</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-nm">llvm-nm</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-objdump">llvm-objdump</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-prof">llvm-prof</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-ranlib">llvm-ranlib</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-readobj">llvm-readobj</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-rtdyld">llvm-rtdyld</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-size">llvm-size</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-stress">llvm-stress</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-symbolizer">llvm-symbolizer</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-llvm-tblgen">llvm-tblgen</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-macho-dump">macho-dump</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-opt">opt</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-scan-build">scan-build</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="b-scan-view">scan-view</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-BugpointPasses.so">BugpointPasses.so</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclang.a">libclang.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangAnalysis.a">libclangAnalysis.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangARCMigrate.a">libclangARCMigrate.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangAST.a">libclangAST.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangASTMatchers.a">libclangASTMatchers.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangBasic.a">libclangBasic.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangCodeGen.a">libclangCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangDriver.a">libclangDriver.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangEdit.a">libclangEdit.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangFormat.a">libclangFormat.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangFrontend.a">libclangFrontend.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangFrontendTool.a">libclangFrontendTool.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangLex.a">libclangLex.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangParse.a">libclangParse.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangRewriteCore.a">libclangRewriteCore.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangRewriteFrontend.a">libclangRewriteFrontend.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangSema.a">libclangSema.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangSerialization.a">libclangSerialization.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclang.so">libclang.so</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangStaticAnalyzerCheckers.a">libclangStaticAnalyzerCheckers.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangStaticAnalyzerCore.a">libclangStaticAnalyzerCore.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangStaticAnalyzerFrontend.a">libclangStaticAnalyzerFrontend.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libclangTooling.a">libclangTooling.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVM-3.3.so">libLLVM-3.3.so</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64AsmParser.a">libLLVMAArch64AsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64AsmPrinter.a">libLLVMAArch64AsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64CodeGen.a">libLLVMAArch64CodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64Desc.a">libLLVMAArch64Desc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64Disassembler.a">libLLVMAArch64Disassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64Info.a">libLLVMAArch64Info.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAArch64Utils.a">libLLVMAArch64Utils.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAnalysis.a">libLLVMAnalysis.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMArchive.a">libLLVMArchive.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMAsmParser.a">libLLVMARMAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMAsmPrinter.a">libLLVMARMAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMCodeGen.a">libLLVMARMCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMDesc.a">libLLVMARMDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMDisassembler.a">libLLVMARMDisassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMARMInfo.a">libLLVMARMInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAsmParser.a">libLLVMAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMAsmPrinter.a">libLLVMAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMBitReader.a">libLLVMBitReader.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMBitWriter.a">libLLVMBitWriter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMCodeGen.a">libLLVMCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMCore.a">libLLVMCore.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMCppBackendCodeGen.a">libLLVMCppBackendCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMCppBackendInfo.a">libLLVMCppBackendInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMDebugInfo.a">libLLVMDebugInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMExecutionEngine.a">libLLVMExecutionEngine.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMHexagonAsmPrinter.a">libLLVMHexagonAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMHexagonCodeGen.a">libLLVMHexagonCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMHexagonDesc.a">libLLVMHexagonDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMHexagonInfo.a">libLLVMHexagonInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMInstCombine.a">libLLVMInstCombine.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMInstrumentation.a">libLLVMInstrumentation.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMInterpreter.a">libLLVMInterpreter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMipa.a">libLLVMipa.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMipo.a">libLLVMipo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMIRReader.a">libLLVMIRReader.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMJIT.a">libLLVMJIT.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMLinker.a">libLLVMLinker.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeAsmParser.a">libLLVMMBlazeAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeAsmPrinter.a">libLLVMMBlazeAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeCodeGen.a">libLLVMMBlazeCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeDesc.a">libLLVMMBlazeDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeDisassembler.a">libLLVMMBlazeDisassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMBlazeInfo.a">libLLVMMBlazeInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMC.a">libLLVMMC.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMCDisassembler.a">libLLVMMCDisassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMCJIT.a">libLLVMMCJIT.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMCParser.a">libLLVMMCParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsAsmParser.a">libLLVMMipsAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsAsmPrinter.a">libLLVMMipsAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsCodeGen.a">libLLVMMipsCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsDesc.a">libLLVMMipsDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsDisassembler.a">libLLVMMipsDisassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMipsInfo.a">libLLVMMipsInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMSP430AsmPrinter.a">libLLVMMSP430AsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMSP430CodeGen.a">libLLVMMSP430CodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMSP430Desc.a">libLLVMMSP430Desc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMMSP430Info.a">libLLVMMSP430Info.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMNVPTXAsmPrinter.a">libLLVMNVPTXAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMNVPTXCodeGen.a">libLLVMNVPTXCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMNVPTXDesc.a">libLLVMNVPTXDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMNVPTXInfo.a">libLLVMNVPTXInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMObjCARCOpts.a">libLLVMObjCARCOpts.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMObject.a">libLLVMObject.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMOption.a">libLLVMOption.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMPowerPCAsmParser.a">libLLVMPowerPCAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMPowerPCAsmPrinter.a">libLLVMPowerPCAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMPowerPCCodeGen.a">libLLVMPowerPCCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMPowerPCDesc.a">libLLVMPowerPCDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMPowerPCInfo.a">libLLVMPowerPCInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMR600AsmPrinter.a">libLLVMR600AsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMR600CodeGen.a">libLLVMR600CodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMR600Desc.a">libLLVMR600Desc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMR600Info.a">libLLVMR600Info.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMRuntimeDyld.a">libLLVMRuntimeDyld.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMScalarOpts.a">libLLVMScalarOpts.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSelectionDAG.a">libLLVMSelectionDAG.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSparcCodeGen.a">libLLVMSparcCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSparcDesc.a">libLLVMSparcDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSparcInfo.a">libLLVMSparcInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSupport.a">libLLVMSupport.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSystemZAsmParser.a">libLLVMSystemZAsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSystemZAsmPrinter.a">libLLVMSystemZAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSystemZCodeGen.a">libLLVMSystemZCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSystemZDesc.a">libLLVMSystemZDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMSystemZInfo.a">libLLVMSystemZInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMTableGen.a">libLLVMTableGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMTarget.a">libLLVMTarget.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMTransformUtils.a">libLLVMTransformUtils.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMVectorize.a">libLLVMVectorize.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86AsmParser.a">libLLVMX86AsmParser.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86AsmPrinter.a">libLLVMX86AsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86CodeGen.a">libLLVMX86CodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86Desc.a">libLLVMX86Desc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86Disassembler.a">libLLVMX86Disassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86Info.a">libLLVMX86Info.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMX86Utils.a">libLLVMX86Utils.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMXCoreAsmPrinter.a">libLLVMXCoreAsmPrinter.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMXCoreCodeGen.a">libLLVMXCoreCodeGen.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMXCoreDesc.a">libLLVMXCoreDesc.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMXCoreDisassembler.a">libLLVMXCoreDisassembler.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLLVMXCoreInfo.a">libLLVMXCoreInfo.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLTO.a">libLTO.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libLTO.so">libLTO.so</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libprofile_rt.a">libprofile_rt.a</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-libprofile_rt.so">libprofile_rt.so</primary>
    </indexterm>
    <indexterm zone="llvm">
      <primary sortas="c-LLVMHello.so">LLVMHello.so</primary>
    </indexterm>

    <para>
      Incomplete list of installed files and directories:
    </para>

<screen><literal>/usr/bin/bugpoint
/usr/bin/c-index-test
/usr/bin/clang
/usr/bin/clang++
/usr/bin/clang-check
/usr/bin/clang-format
/usr/bin/clang-tblgen
/usr/bin/llc
/usr/bin/lli
/usr/bin/llvm-ar
/usr/bin/llvm-as
/usr/bin/llvm-bcanalyzer
/usr/bin/llvm-config
/usr/bin/llvm-cov
/usr/bin/llvm-diff
/usr/bin/llvm-dis
/usr/bin/llvm-dwarfdump
/usr/bin/llvm-extract
/usr/bin/llvm-link
/usr/bin/llvm-mc
/usr/bin/llvm-mcmarkup
/usr/bin/llvm-nm
/usr/bin/llvm-objdump
/usr/bin/llvm-prof
/usr/bin/llvm-ranlib
/usr/bin/llvm-readobj
/usr/bin/llvm-rtdyld
/usr/bin/llvm-size
/usr/bin/llvm-stress
/usr/bin/llvm-symbolizer
/usr/bin/llvm-tblgen
/usr/bin/macho-dump
/usr/bin/opt
/usr/bin/scan-build
/usr/bin/scan-view
/usr/include/clang/
/usr/include/clang-c/
/usr/include/llvm/
/usr/include/llvm-c/
/usr/lib/BugpointPasses.so
/usr/lib/clang/
/usr/lib/clang-analyzer/
/usr/lib/libclang.a
/usr/lib/libclangAnalysis.a
/usr/lib/libclangARCMigrate.a
/usr/lib/libclangAST.a
/usr/lib/libclangASTMatchers.a
/usr/lib/libclangBasic.a
/usr/lib/libclangCodeGen.a
/usr/lib/libclangDriver.a
/usr/lib/libclangEdit.a
/usr/lib/libclangFormat.a
/usr/lib/libclangFrontend.a
/usr/lib/libclangFrontendTool.a
/usr/lib/libclangLex.a
/usr/lib/libclangParse.a
/usr/lib/libclangRewriteCore.a
/usr/lib/libclangRewriteFrontend.a
/usr/lib/libclangSema.a
/usr/lib/libclangSerialization.a
/usr/lib/libclang.so
/usr/lib/libclangStaticAnalyzerCheckers.a
/usr/lib/libclangStaticAnalyzerCore.a
/usr/lib/libclangStaticAnalyzerFrontend.a
/usr/lib/libclangTooling.a
/usr/lib/libLLVM-3.3.so
/usr/lib/libLLVMAArch64AsmParser.a
/usr/lib/libLLVMAArch64AsmPrinter.a
/usr/lib/libLLVMAArch64CodeGen.a
/usr/lib/libLLVMAArch64Desc.a
/usr/lib/libLLVMAArch64Disassembler.a
/usr/lib/libLLVMAArch64Info.a
/usr/lib/libLLVMAArch64Utils.a
/usr/lib/libLLVMAnalysis.a
/usr/lib/libLLVMArchive.a
/usr/lib/libLLVMARMAsmParser.a
/usr/lib/libLLVMARMAsmPrinter.a
/usr/lib/libLLVMARMCodeGen.a
/usr/lib/libLLVMARMDesc.a
/usr/lib/libLLVMARMDisassembler.a
/usr/lib/libLLVMARMInfo.a
/usr/lib/libLLVMAsmParser.a
/usr/lib/libLLVMAsmPrinter.a
/usr/lib/libLLVMBitReader.a
/usr/lib/libLLVMBitWriter.a
/usr/lib/libLLVMCodeGen.a
/usr/lib/libLLVMCore.a
/usr/lib/libLLVMCppBackendCodeGen.a
/usr/lib/libLLVMCppBackendInfo.a
/usr/lib/libLLVMDebugInfo.a
/usr/lib/libLLVMExecutionEngine.a
/usr/lib/libLLVMHexagonAsmPrinter.a
/usr/lib/libLLVMHexagonCodeGen.a
/usr/lib/libLLVMHexagonDesc.a
/usr/lib/libLLVMHexagonInfo.a
/usr/lib/libLLVMInstCombine.a
/usr/lib/libLLVMInstrumentation.a
/usr/lib/libLLVMInterpreter.a
/usr/lib/libLLVMipa.a
/usr/lib/libLLVMipo.a
/usr/lib/libLLVMIRReader.a
/usr/lib/libLLVMJIT.a
/usr/lib/libLLVMLinker.a
/usr/lib/libLLVMMBlazeAsmParser.a
/usr/lib/libLLVMMBlazeAsmPrinter.a
/usr/lib/libLLVMMBlazeCodeGen.a
/usr/lib/libLLVMMBlazeDesc.a
/usr/lib/libLLVMMBlazeDisassembler.a
/usr/lib/libLLVMMBlazeInfo.a
/usr/lib/libLLVMMC.a
/usr/lib/libLLVMMCDisassembler.a
/usr/lib/libLLVMMCJIT.a
/usr/lib/libLLVMMCParser.a
/usr/lib/libLLVMMipsAsmParser.a
/usr/lib/libLLVMMipsAsmPrinter.a
/usr/lib/libLLVMMipsCodeGen.a
/usr/lib/libLLVMMipsDesc.a
/usr/lib/libLLVMMipsDisassembler.a
/usr/lib/libLLVMMipsInfo.a
/usr/lib/libLLVMMSP430AsmPrinter.a
/usr/lib/libLLVMMSP430CodeGen.a
/usr/lib/libLLVMMSP430Desc.a
/usr/lib/libLLVMMSP430Info.a
/usr/lib/libLLVMNVPTXAsmPrinter.a
/usr/lib/libLLVMNVPTXCodeGen.a
/usr/lib/libLLVMNVPTXDesc.a
/usr/lib/libLLVMNVPTXInfo.a
/usr/lib/libLLVMObjCARCOpts.a
/usr/lib/libLLVMObject.a
/usr/lib/libLLVMOption.a
/usr/lib/libLLVMPowerPCAsmParser.a
/usr/lib/libLLVMPowerPCAsmPrinter.a
/usr/lib/libLLVMPowerPCCodeGen.a
/usr/lib/libLLVMPowerPCDesc.a
/usr/lib/libLLVMPowerPCInfo.a
/usr/lib/libLLVMR600AsmPrinter.a
/usr/lib/libLLVMR600CodeGen.a
/usr/lib/libLLVMR600Desc.a
/usr/lib/libLLVMR600Info.a
/usr/lib/libLLVMRuntimeDyld.a
/usr/lib/libLLVMScalarOpts.a
/usr/lib/libLLVMSelectionDAG.a
/usr/lib/libLLVMSparcCodeGen.a
/usr/lib/libLLVMSparcDesc.a
/usr/lib/libLLVMSparcInfo.a
/usr/lib/libLLVMSupport.a
/usr/lib/libLLVMSystemZAsmParser.a
/usr/lib/libLLVMSystemZAsmPrinter.a
/usr/lib/libLLVMSystemZCodeGen.a
/usr/lib/libLLVMSystemZDesc.a
/usr/lib/libLLVMSystemZInfo.a
/usr/lib/libLLVMTableGen.a
/usr/lib/libLLVMTarget.a
/usr/lib/libLLVMTransformUtils.a
/usr/lib/libLLVMVectorize.a
/usr/lib/libLLVMX86AsmParser.a
/usr/lib/libLLVMX86AsmPrinter.a
/usr/lib/libLLVMX86CodeGen.a
/usr/lib/libLLVMX86Desc.a
/usr/lib/libLLVMX86Disassembler.a
/usr/lib/libLLVMX86Info.a
/usr/lib/libLLVMX86Utils.a
/usr/lib/libLLVMXCoreAsmPrinter.a
/usr/lib/libLLVMXCoreCodeGen.a
/usr/lib/libLLVMXCoreDesc.a
/usr/lib/libLLVMXCoreDisassembler.a
/usr/lib/libLLVMXCoreInfo.a
/usr/lib/libLTO.a
/usr/lib/libLTO.so
/usr/lib/libprofile_rt.a
/usr/lib/libprofile_rt.so
/usr/lib/LLVMHello.so
/usr/share/doc/llvm/
/usr/share/man/man1/clang.1
/usr/share/man/man1/scan-build.1</literal></screen>

  </sect2>

</sect1>

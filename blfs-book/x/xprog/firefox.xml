<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="firefox" xreflabel="firefox-&firefox-version;">
  <?dbhtml filename="firefox.html" ?>

  <title>firefox-&firefox-version;</title>

  <sect2 role="package">
    <title>Package Information</title>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&firefox-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&firefox-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download: <ulink url="&firefox-download;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          MD5 sum: &firefox-md5sum;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para>
      <xref linkend="libxt"/>,
      <xref linkend="gtk"/>,
      <xref linkend="alsa-lib"/>,
      <xref linkend="unzip"/>, and
      <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para>
      <xref linkend="ffmpeg"/> (runtime),
      <xref linkend="hunspell"/>,
      <xref linkend="icu"/>,
      <xref linkend="libevent"/>,
      <xref linkend="libvpx"/>,
      <xref linkend="libwebp"/>,
      <xref linkend="nspr"/>,
      <xref linkend="nss"/>,
      <xref linkend="sqlite"/>,
      <xref linkend="yasm"/>, and
      <ulink url="https://github.com/libproxy/libproxy">libproxy</ulink>
    </para>

    <note>
      <para>
        If you don't install recommended dependencies, then internal copies of
        those packages will be used. They might be tested to work, but they can
        be out of date or contain security holes.
      </para>
    </note>

    <note>
      <para>
        With Firefox-31.0 and later versions, you must have installed libressl
        before python2, or the build system will quickly fail with output
        including "ImportError: cannot import name HTTPSHandler".
      </para>
    </note>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para>
      <xref linkend="curl"/>,
      <ulink url="http://sourceforge.net/projects/liboauth/files/">liboauth</ulink>
    </para>

  </sect2>

  <sect2>
    <title>Installation</title>

    <para>
      The configuration of Firefox is accomplished by creating a mozconfig file
      containing the desired configuration options. A default mozconfig is
      created below. To see the entire list of available configuration options
      (and an abbreviated description of each one), issue ./configure --help.
      You may also wish to review the entire file and uncomment any other
      desired options. Create the file by issuing the following command:
    </para>

<screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
<literal># If you have not installed Yasm then uncomment this line:
#ac_add_options --disable-webm

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu
ac_add_options --enable-system-sqlite
ac_add_options --enable-system-hunspell

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=
ac_add_options --enable-application=browser

ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests

ac_add_options --enable-optimize

ac_add_options --enable-gio
ac_add_options --enable-official-branding
ac_add_options --enable-safe-browsing
ac_add_options --enable-url-classifier

ac_add_options --enable-default-toolkit=cairo-gtk2

ac_add_options --disable-dbus
ac_add_options --disable-necko-wifi
ac_add_options --disable-gconf
ac_add_options --disable-pulseaudio

# From firefox-40, using system cairo causes firefox to crash
# frequently when it is doing background rendering in a tab.
#ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-pthreads

ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib
#ac_add_options --with-system-graphite2
#ac_add_options --with-system-harfbuzz

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir</literal>
EOF</userinput></screen>

    <para>
      TODO
    </para>

<screen><userinput>export PATH=/opt/python2/bin:/opt/autoconf213/bin:/bin</userinput></screen>

    <para>
      Build the package:
    </para>

<!--<screen><userinput>SHELL=/bin/sh make -f client.mk</userinput></screen>-->
<screen><userinput>SHELL=/bin/sh make -f client.mk</userinput></screen>

    <variablelist>
      <title>Explanation</title>

      <varlistentry>
        <term><command>make -f client.mk ...</command></term>
        <listitem>
          <para>
            Mozilla products are packaged to allow the use of a configuration
            file which can be used to pass the configuration settings to the
            configure command. make uses the client.mk file to get initial
            configuration and setup parameters.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>
      Install the package:
    </para>

<screen><userinput>porg -lp firefox-&firefox-version; -E $PWD "SHELL=/bin/sh make -f client.mk install INSTALL_SDK= &amp;&amp;
chown -R 0:0 /lib/firefox-&firefox-version; &amp;&amp;
mkdir -pv /lib/mozilla/plugins &amp;&amp;
ln -sfv ../../mozilla/plugins /lib/firefox-&firefox-version;/browser"</userinput></screen>

    <variablelist>
      <title>Explanation</title>

      <varlistentry>
        <term><command>mkdir -pv /lib/mozilla/plugins</command></term>
        <listitem>
          <para>
            This checks that /lib/mozilla/plugins exists.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><command>ln -sv ... /lib/firefox-&firefox-version;/browser</command></term>
        <listitem>
          <para>
            This command creates a symbolic link to /lib/mozilla/plugins. It's
            not really needed, as Firefox checks /lib/mozilla/plugins by
            default, but the symbolic link is made to keep all the plugins
            installed in one folder.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>
      TODO
    </para>

<screen><userinput>export PATH=/bin</userinput></screen>

  </sect2>

</sect1>

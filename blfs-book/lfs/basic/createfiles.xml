<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

]>

<sect1 id="createfiles" xreflabel="Creating Essential Files and Symlinks">
  <?dbhtml filename="createfiles.html"?>

  <title>Creating Essential Files and Symlinks</title>

  <para>
    Some programs use hard-wired paths to programs which do not exist yet. In
    order to satisfy these programs, create a number of symbolic links which
    will be replaced by real files throughout the course of this chapter after
    the software has been installed:
  </para>

<screen><userinput>ln -sv /tools/bin/cat /tools/bin/echo /tools/bin/pwd /tools/bin/sh /tools/bin/stty /bin
ln -sv /tools/lib/libgcc_s.so /tools/lib/libgcc_s.so.1 /lib
ln -sv /tools/lib/libstdc++.so /tools/lib/libstdc++.so.6 /lib
sed 's|tools/||' /tools/lib/libstdc++.la > /lib/libstdc++.la</userinput></screen>

  <variablelist>
    <title>The purpose of each link:</title>

    <varlistentry>
      <term><parameter><filename>/bin/cat</filename></parameter></term>
      <listitem>
        <para>This pathname is hard-coded into Glibc's configure script.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/echo</filename></parameter></term>
      <listitem>
        <para>This is to satisfy one of the tests in Glibc's test suite, which
        expects <filename>/bin/echo</filename>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/pwd</filename></parameter></term>
      <listitem>
        <para>Some <command>configure</command> scripts, particularly Glibc's,
        have this pathname hard-coded.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/sh</filename></parameter></term>
      <listitem>
        <para>Many shell scripts hard-code <filename>/bin/sh</filename>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/bin/stty</filename></parameter></term>
      <listitem>
        <para>This pathname is hard-coded into Expect, therefore it is needed
        for Binutils and GCC test suites to pass.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/lib/libgcc_s.so /lib/libgcc_s.so.1</filename></parameter></term>
      <listitem>
        <para>Glibc needs this for the pthreads library to work.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/lib/libstdc++.so /lib/libstdc++.so.6</filename></parameter></term>
      <listitem>
        <para>This is needed for C++ support in GMP.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter><filename>/lib/libstdc++.la</filename></parameter></term>
      <listitem>
        <para>This prevents a <filename class="directory">/tools</filename>
        reference that would otherwise be in
        <filename>/lib/libstdc++.la</filename> after GCC is installed.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>
    Historically, Linux maintains a list of the mounted file systems in the
    file /etc/mtab. Modern kernels maintain this list internally and exposes it
    to the user via the /proc filesystem. To satisfy utilities that expect the
    presence of /etc/mtab, create the following symbolic link:
  </para>

<screen><userinput>ln -sv /proc/self/mounts /etc/mtab</userinput></screen>

  <para>
    In order for user root to be able to login and for the name "root" to be
    recognized, there must be relevant entries in the /etc/passwd and
    /etc/group files. To enable shadowed passwords, the /etc/shadow file must
    exist.
  </para>

  <para>
    Create the /etc/passwd, /etc/group, and /etc/shadow files by running the
    following commands:
  </para>

<screen><userinput>touch /etc/passwd /etc/group /etc/shadow
chmod -v 0400 /etc/shadow
adduser -u 0 -g root -h /root -s /bin/ash -H -D root
adduser -u 1 -g bin -h /dev/null -s /bin/false -H -D bin
addgroup -g 2 sys
addgroup -g 3 kmem
addgroup -g 4 tape
addgroup -g 5 tty
addgroup -g 6 daemon
addgroup -g 7 floppy
addgroup -g 8 disk
addgroup -g 9 lp
addgroup -g 10 dialout
addgroup -g 11 audio
addgroup -g 12 video
addgroup -g 13 utmp
addgroup -g 14 usb
addgroup -g 15 cdrom
addgroup -g 24 uucp
addgroup -g 28 wheel
addgroup -g 34 mail
addgroup -g 61 kvm
addgroup -g 99 nogroup
addgroup -g 101 input
adduser -u 99 -G nogroup -g 'Unprivileged User' -h /dev/null -s /bin/false -H -D nobody</userinput></screen>

  <para>
    The created groups are not part of any standardâ€”they are groups decided on
    in part by the requirements of the mdev configuration in this chapter, and
    in part by common convention employed by a number of existing Linux
    distributions. All group names and GIDs, besides the group root with a
    Group ID (GID) of 0 and a group bin with a GID of 1, can be chosen freely
    by the system administrator since well-written programs do not depend on
    GID numbers, but rather use the group's name. 
  </para>

  <para>
    The login, agetty, and init programs (and others) use a number of log files
    to record information such as who was logged into the system and when.
    However, these programs will not write to the log files if they do not
    already exist. Initialize the log files and give them proper permissions:
  </para>

<screen><userinput>touch /var/log/btmp /var/log/lastlog /var/log/wtmp
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp</userinput></screen>

  <para>
    The /var/log/wtmp file records all logins and logouts. The /var/log/lastlog
    file records when each user last logged in. The /var/log/btmp file records
    the bad login attempts.
  </para>

  <para>
    The /run/utmp file records the users that are currently logged in. This
    file is created dynamically in the boot scripts.
  </para>

</sect1>

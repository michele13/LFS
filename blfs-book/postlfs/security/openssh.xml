<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="openssh" xreflabel="openssh-&openssh-version;">
  <?dbhtml filename="openssh.html"?>

  <title>openssh-&openssh-version;</title>

  <sect2 role="package">
    <title>Package Information</title>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&openssh-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&openssh-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download: <ulink url="&openssh-download;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          MD5 sum: &openssh-md5sum;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para>
      <xref linkend="libressl"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para>
      <xref linkend="libedit"/>,
      <xref linkend="x-window-system"/>,
      <ulink url="http://www.opensc-project.org/">OpenSC</ulink> and
      <ulink url="http://www.citi.umich.edu/projects/smartcard/sectok.html">libsectok</ulink>
    </para>

  </sect2>

  <sect2>
    <title>Installation</title>

    <para>
      OpenSSH runs as two processes when connecting to other computers. The
      first process is a privileged process and controls the issuance of
      privileges as necessary. The second process communicates with the network.
      Additional installation steps are necessary to set up the proper
      environment, which are performed by issuing the following commands:
    </para>

<screen><userinput>install -v -m700 -d /var/lib/sshd &amp;&amp;
chown -v root:sys /var/lib/sshd &amp;&amp;
adduser -g 'sshd PrivSep' -h /var/lib/sshd \
    -s /bin/false -u 50 -D -H sshd</userinput></screen>

    <para>
      Prepare the package:
    </para>

<screen><userinput>./configure --prefix= \
            --sbindir=/bin \
            --sysconfdir=/etc/ssh \
            --with-mantype=doc \
            --with-md5-passwords \
            --with-privsep-path=/var/lib/sshd \
            --with-default-path=/bin</userinput></screen>

    <variablelist>
      <title>Explanation</title>

      <varlistentry>
        <term><parameter>--with-md5-passwords</parameter></term>
        <listitem>
          <para>
            This enables the use of MD5 passwords.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-xauth=/bin/xauth</parameter></term>
        <listitem>
          <para>
            Set the default location for the xauth binary for X authentication.
            This can also be controlled from sshd_config with the XAuthLocation
            keyword. You can omit this switch if Xorg is already installed.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--with-libedit</option></term>
        <listitem>
          <para>
            This option enables line editing and history features for sftp.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>
      Build the package:
    </para>

<screen><userinput>make</userinput></screen>

    <para>
      Install the package:
    </para>

<screen><userinput>porg -lp openssh-&openssh-version; -E $PWD "make -j1 install &amp;&amp;
install -v -m755 contrib/ssh-copy-id /bin &amp;&amp;
install -v -m644 contrib/ssh-copy-id.1 /share/man/man1"</userinput></screen>

  </sect2>

  <sect2>
    <title>Configuration</title>

    <para>
      There are no required changes to any of these files. However, you may
      wish to view the /etc/ssh/ files and make any changes appropriate for the
      security of your system. One recommended change is that you disable root
      login via ssh. Execute the following command to disable root login via
      ssh:
    </para>

<screen><userinput>echo "PermitRootLogin no" &gt;&gt; /etc/ssh/sshd_config</userinput></screen>

    <para>
      If you want to be able to log in without typing in your password, first
      create ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub with ssh-keygen and then copy
      ~/.ssh/id_rsa.pub to ~/.ssh/authorized_keys on the remote computer that
      you want to log into. You'll need to change REMOTE_USERNAME and
      REMOTE_HOSTNAME for the username and hostname of the remote computer and
      you'll also need to enter your password for the ssh-copy-id command to
      succeed:
    </para>

<screen><userinput>ssh-keygen &amp;&amp;
ssh-copy-id -i ~/.ssh/id_rsa.pub <replaceable>REMOTE_USERNAME</replaceable>@<replaceable>REMOTE_HOSTNAME</replaceable></userinput></screen>

    <para>
      Once you've got passwordless logins working it's actually more secure
      than logging in with a password (as the private key is much longer than
      most people's passwords). If you would like to now disable password
      logins:
    </para>


<screen><userinput>echo "PasswordAuthentication no" >> /etc/ssh/sshd_config &amp;&amp;
echo "ChallengeResponseAuthentication no" >> /etc/ssh/sshd_config</userinput></screen>

    <para>
      Additional configuration information can be found in the man pages for
      sshd, ssh and ssh-agent.
    </para>

    <sect3>
      <title>Boot Script</title>

      <para>
        To start the SSH server at system boot, install the
        /etc/rc.d/init.d/sshd init script included in the <xref
        linkend="bootscripts"/> package.
      </para>

<screen><userinput>porg -lp+ openssh-&openssh-version; "make -j1 install-sshd"</userinput></screen>

    </sect3>

  </sect2>

</sect1>

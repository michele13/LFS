<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY ntfs-3g-homepage      "http://www.tuxera.com/community/open-source-ntfs-3g/">
  <!ENTITY ntfs-3g-wikipedia     "https://en.wikipedia.org/wiki/NTFS-3G">
  <!ENTITY ntfs-3g-download-http "http://tuxera.com/opensource/ntfs-3g_ntfsprogs-&ntfs-3g-version;.tgz">
  <!ENTITY ntfs-3g-download-ftp  " ">
  <!ENTITY ntfs-3g-md5sum        "8cd57768310e3b2be39b3191d808e241">
  <!ENTITY ntfs-3g-size          "1.1 MB">
  <!ENTITY ntfs-3g-buildsize     "19 MB">
  <!ENTITY ntfs-3g-time          "0.5 SBU">
]>

<sect1 id="ntfs-3g" xreflabel="ntfs-3g-&ntfs-3g-version;">
  <?dbhtml filename="ntfs-3g.html"?>

  <title>ntfs-3g-&ntfs-3g-version;</title>

  <sect2 role="package">
    <title>Introduction</title>

    <para>
      The Ntfs-3g package contains a stable, read-write open source driver for
      NTFS partitions. NTFS partitions are used by most Microsoft operating
      systems. Ntfs-3g allows you to mount NTFS partitions in read-write mode
      from your Linux system. It uses the FUSE kernel module to be able to
      implement NTFS support in user space.
    </para>
    <para>
      This package contains both the NTFS-3g driver itself and various utilities 
      useful for manipulating NTFS partitions.
    </para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&ntfs-3g-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&ntfs-3g-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (HTTP): <ulink url="&ntfs-3g-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&ntfs-3g-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &ntfs-3g-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &ntfs-3g-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &ntfs-3g-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &ntfs-3g-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependencies</bridgehead>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para>
      <xref linkend="fuse"/>
    </para>

  </sect2>

  <sect2>
    <title>Kernel Configuration</title>

    <para>
      Enable the following options in the kernel configuration and recompile the
      kernel if necessary:
    </para>

<screen><literal>File systems  ---&gt;
  &lt;*/M&gt; FUSE (Filesystem in Userspace) support [CONFIG_FUSE_FS]</literal></screen>

  </sect2>

  <sect2>
    <title>Installation</title>

    <para>
      Suppress installation of unnecessary files:
    </para>

<screen><userinput>sed "s/ install-docDATA$//" -i Makefile.in</userinput></screen>

    <para>
      Prepare the package for compilation:
    </para>

<screen><userinput>sed "/DESTDIR.*sbin$/s/sbin/bin/" -i ntfsprogs/Makefile.in &amp;&amp;
sed "/LN_S/s:\$(sbindir)/::" -i ntfsprogs/Makefile.in &amp;&amp;
sed "/LN_S/s:/sbin:/bin:" -i ntfsprogs/Makefile.in &amp;&amp;
sed "/MKDIR.*\/sbin/s:/sbin:/bin:" -i src/Makefile.in &amp;&amp;
sed "/LN_S/s:\$(rootbindir)/::" -i src/Makefile.in &amp;&amp;
sed "/LN_S/s:/sbin:/bin:" -i src/Makefile.in &amp;&amp;
sed "/LDCONFIG/d" -i src/Makefile.in &amp;&amp;
./configure --prefix= \
            --sbindir=/bin \
            --disable-static \
            --with-fuse=external</userinput></screen>

    <para>
      Compile the package:
    </para>

<screen><userinput>make</userinput></screen>

    <para>
      Install the package:
    </para>

<screen role="root"><userinput>porg -lp ntfs-3g-&ntfs-3g-version; "make -j1 install &amp;&amp;
rm -v /lib/libntfs-3g.la &amp;&amp;
ln -sv ntfs-3g /bin/mount.ntfs &amp;&amp;
ln -sv ntfs-3g.8 /share/man/man8/mount.ntfs.8"</userinput></screen>
<!--
    <para>
      If you want ordinary users to be able to mount NTFS partitions you'll need
      to set mount.ntfs with the root user ID. Note: it is probably unsafe to do
      this on a computer that needs to be secure (like a server). As the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>chmod -v 4755 /bin/mount.ntfs</userinput></screen>
-->
    <sect3>
      <title>Command Explanations</title>

      <para>
        <parameter>--with-fuse=external</parameter>: This switch dynamically
        links <command>lowntfs-3g</command> and <command>ntfs-3g</command> to
        external libfuse.
      </para>
    
      <para>
        <option>--disable-ntfsprogs</option>: Disables installation of various 
        utilities used to manipulate NTFS partitions.
      </para>

      <para>
        <command>ln -sv ntfs-3g /bin/mount.ntfs</command>: Creating
        /bin/mount.ntfs makes <command>mount</command> default to using Ntfs-3g
        to mount NTFS partitions.
      </para>
<!--
      <para>
        <command>chmod -v 4755 /bin/mount.ntfs</command>: Making mount.ntfs setuid
        root allows non root users to mount NTFS partitions.
      </para>
-->
    </sect3>

  </sect2>
<!--
  <sect2 role="configuration">
    <title>Using Ntfs-3g</title>

    <para>
      To mount a Windows partition at boot time, put a line like this in
      /etc/fstab:
    </para>

    <screen>/dev/sda1 /mnt/windows auto defaults 0 0</screen>

    <para>
      To allow users to mount a usb stick with an NTFS filesystem on it, put a
      line similar to this (change sdc1 to whatever a usb stick would be on your
      system) in /etc/fstab:
    </para>

    <screen>/dev/sdc1 /mnt/usb auto user,noauto,umask=0,utf8 0 0</screen>

    <para>
      In order for a user to be able to mount the usb stick, they will need 
      to be able to write to <filename class="directory">/mnt/usb</filename>, 
      so as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>chmod -v 777 /mnt/usb</userinput></screen>

  </sect2>
-->
</sect1>

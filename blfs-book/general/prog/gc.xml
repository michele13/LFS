<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY gc-homepage      "http://www.hboehm.info/gc/">
  <!ENTITY gc-wikipedia     "https://en.wikipedia.org/wiki/Boehm_garbage_collector">
  <!ENTITY gc-download-http "http://www.hboehm.info/gc/gc_source/gc-&gc-version;.tar.gz">
  <!ENTITY gc-download-ftp  " ">
  <!ENTITY gc-md5sum        "12c05fd2811d989341d8c6d81f66af87">
  <!ENTITY gc-size          "1.1 MB">
  <!ENTITY gc-buildsize     "9.7 MB">
  <!ENTITY gc-time          "0.2 SBU">
]>

<sect1 id="gc" xreflabel="gc-&gc-version;">
  <?dbhtml filename="gc.html"?>

  <title>gc-&gc-version;</title>

  <sect2 role="package">
    <title>Introduction</title>

    <para>
      The GC package contains the Boehm-Demers-Weiser conservative garbage
      collector, which can be used as a garbage collecting replacement for the
      C malloc function or C++ new operator. It allows you to allocate memory
      basically as you normally would, without explicitly deallocating memory
      that is no longer useful. The collector automatically recycles memory
      when it determines that it can no longer be otherwise accessed. The
      collector is also used by a number of programming language
      implementations that either use C as intermediate code, want to
      facilitate easier interoperation with C libraries, or just prefer the
      simple collector interface. Alternatively, the garbage collector may be
      used as a leak detector for C or C++ programs, though that is not its
      primary goal.
    </para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Homepage: <ulink url="&gc-homepage;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Wikipedia: <ulink url="&gc-wikipedia;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (HTTP): <ulink url="&gc-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&gc-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &gc-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &gc-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &gc-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &gc-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para>
      <xref linkend="libatomic_ops"/>
    </para>

  </sect2>

  <sect2>
    <title>Installation</title>

    <para>
      Suppress installation of unnecessary files:
    </para>

<screen><userinput>sed "s/ install-dist_pkgdataDATA//" -i Makefile.in</userinput></screen>

    <para>
      Prepare the package for compilation:
    </para>

<screen><userinput>./configure --prefix= \
            --disable-static \
            --enable-cplusplus</userinput></screen>

    <para>
      Compile the package:
    </para>

<screen><userinput>make</userinput></screen>

    <para>
      Install the package:
    </para>

<screen role="root"><userinput>porg -lD "make -j1 install &amp;&amp;
rm -v /lib/libcord.la &amp;&amp;
rm -v /lib/libgc.la &amp;&amp;
rm -v /lib/libgccpp.la &amp;&amp;
install -v -m644 doc/gc.man /share/man/man3/gc.3 &amp;&amp;
ln -sv gc.3 /share/man/man3/gc_malloc.3"</userinput></screen>

    <sect3>
      <title>Command Explanations</title>

      <para>
        <parameter>--enable-cplusplus</parameter>: This parameter enables the
        building and installing the C++ library along with the standard C library.
      </para>

    </sect3>

  </sect2>

</sect1>

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY perl_modules_md5sums_download_http "&sources-anduin-http;/perl-modules/">
  <!ENTITY perl_modules_md5sums_download_ftp  "&sources-anduin-ftp;/perl-modules/">
]>

<sect1 id="perl-modules" xreflabel="Perl modules">
  <?dbhtml filename="perl-modules.html" ?>

  <title>Perl Modules</title>

  <indexterm zone="perl-modules">
    <primary sortas="a-Perl-modules">Perl modules</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Perl Modules</title>

    <para>The <application>Perl</application> module packages add useful
    objects to the <application>Perl</application> language. Modules utilized
    by packages throughout BLFS are listed here, along with their dependencies.
    Installation of the modules shown on this page should be accomplished by
    installing the dependencies in the order listed. The Perl Module standard
    build and installation instructions are shown at the bottom of this page.
    </para>

    <!-- Archive::Zip -->
    <bridgehead renderas="sect3" id="perl-archive-zip"
    xreflabel="Archive::Zip-&Archive-Zip-version;">
    Archive::Zip-&Archive-Zip-version;</bridgehead>

    <indexterm zone="perl-modules perl-archive-zip">
      <primary sortas="a-Archive-Zip">Archive::Zip</primary>
    </indexterm>

    <para>The Archive::Zip module allows a <application>Perl</application>
    program to create, manipulate, read, and write Zip archive files. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="http://search.cpan.org/CPAN/authors/id/P/PH/PHRED/Archive-Zip-&Archive-Zip-version;.tar.gz">
          Archive::Zip-&Archive-Zip-version;</ulink> (MD5 sum: 35b81833e44d0001f0e1c86c72f2a6c8)
        </para>
      </listitem>
    </itemizedlist>

    <!-- SGMLSpm -->
    <bridgehead renderas="sect3" id="perl-sgmlspm"
    xreflabel="SGMLSpm-&SGMLSpm-version;">
    SGMLSpm-&SGMLSpm-version;</bridgehead>

    <indexterm zone="perl-modules perl-sgmlspm">
      <primary sortas="a-SGMLSpm">SGMLSpm</primary>
    </indexterm>

    <para>The SGMLSpm module is a <application>Perl</application> library
      used for parsing the output from James Clark's SGMLS and NSGMLS
      parsers. This modules uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    <para> Before beginning the build, issue
      the following command to prevent an error:</para>

<screen><userinput>chmod -v 644 MYMETA.yml</userinput></screen>

    <para>
      After installed, as the <systemitem class="username">root</systemitem>
      user:
    </para>

<screen role="root"><userinput>ln -sv sgmlspl.pl /usr/bin/sgmlspl</userinput></screen>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="http://search.cpan.org/CPAN/authors/id/R/RA/RAAB/SGMLSpm-&SGMLSpm-version;.tar.gz">
          SGMLSpm-&SGMLSpm-version;</ulink> (MD5 sum: 746c74ae969992cedb1a2879b4168090)
        </para>
      </listitem>
    </itemizedlist>

    <!-- XML::Parser -->
    <bridgehead renderas="sect3" id="perl-xml-parser"
    xreflabel="XML::Parser-&XML-Parser-version;">
    XML::Parser-&XML-Parser-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-parser">
      <primary sortas="a-XML-Parser">XML::Parser</primary>
    </indexterm>

    <para>The XML::Parser module is a <application>Perl</application> extension
    interface to James Clark's XML parser,
    <application>expat</application>. The module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="http://search.cpan.org/CPAN/authors/id/T/TO/TODDR/XML-Parser-&XML-Parser-version;.tar.gz">
          XML::Parser-&XML-Parser-version;</ulink> (MD5 sum: af4813fe3952362451201ced6fbce379)
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="expat"/>
            </para>
          </listitem>
        </itemizedlist>

      </listitem>
    </itemizedlist>

    <!-- XML::Simple -->
    <bridgehead renderas="sect3" id="perl-xml-simple"
    xreflabel="XML::Simple-&XML-Simple-version;">
    XML::Simple-&XML-Simple-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-simple">
      <primary sortas="a-XML-Simple">XML::Simple</primary>
    </indexterm>

    <para>The XML::Simple module is a <application>Perl</application> extension
    that provides an easy API to read and write XML (especially config files).
    This module and all dependency modules use the standard
    <xref linkend="perl-standard-install"/>.</para>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="http://cpan.org/authors/id/G/GR/GRANTM/XML-Simple-&XML-Simple-version;.tar.gz">
          XML::Simple-&XML-Simple-version;</ulink> (MD5 sum: 4d10964e123b76eca36678464daa63cd)
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <ulink url="http://search.cpan.org/~grantm/XML-SAX/">XML::SAX</ulink>
              (Note: this package does not support parallel build)
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  <ulink url="http://search.cpan.org/~perigrin/XML-NamespaceSupport/">
                  XML::NamespaceSupport</ulink>
                </para>
              </listitem>
              <listitem>
                <para>
                  <ulink url="http://search.cpan.org/~grantm/XML-SAX-Base/">
                  XML::SAX::Base</ulink>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://search.cpan.org/~bjoern/XML-SAX-Expat/">XML::SAX::Expat</ulink>
              (Note: this package does not support parallel build)
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  <xref linkend="perl-xml-parser"/>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para id="perl-xml-libxml">
              <ulink url="http://search.cpan.org/~shlomif/XML-LibXML/">XML::LibXML</ulink>
              (recommended for faster parsing)
            </para>
          </listitem>
          <listitem>
            <para>
              <ulink url="http://search.cpan.org/~chorny/Tie-IxHash/">Tie::IxHash</ulink>
              (optionally used in the test suite)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2 role="installation" id="perl-standard-install"
  xreflabel="build and installation instructions">
    <title>Standard Installation of Perl Modules</title>

    <para>Install <application>Perl</application> modules by running the
    following commands:</para>

<screen><userinput>perl Makefile.PL &amp;&amp;
make &amp;&amp;
make test</userinput></screen>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make install</userinput></screen>

    <note>
      <para>When reinstalling a <application>Perl</application> module,
      sometimes older versions of the module being reinstalled are in other
      directories specified in <parameter>@INC</parameter>.  To delete all
      other versions of the module being reinstalled (not simply older ones)
      set the <varname>UNINST</varname> variable:</para>

<screen><userinput>make install UNINST=1</userinput></screen>
    </note>

  </sect2>

  <sect2 role="installation">
    <title>(Alternate) Auto Installation of Perl Modules.</title>

    <para>There is an alternate way of installing the modules using the
    <command>cpan</command> shell <command>install</command> command. The
    command automatically downloads the source from the CPAN archive, extracts
    it, runs the compilation, testing and installation commands mentioned
    above, and removes the build source tree. You may still need to install
    dependent library packages before running the automated installation
    method.</para>

    <para>The first time you run <command>cpan</command>, you'll be prompted
    to enter some information regarding download locations and methods. This
    information is retained in files located in
    <filename class='directory'>~/.cpan</filename>. Start the
    <command>cpan</command> shell by issuing '<command>cpan</command>' as the
    <systemitem class="username">root</systemitem> user. Any module may now be
    installed from the
    <emphasis role='underlined'><prompt>cpan&gt;&nbsp;</prompt></emphasis>
    prompt with the command:</para>

<screen role="root"><userinput>install <replaceable>&lt;Module::Name&gt;</replaceable></userinput></screen>

    <para>For additional commands and help, issue '<command>help</command>'
    from the
    <emphasis role='underlined'><prompt>cpan&gt;&nbsp;</prompt></emphasis>
    prompt.</para>

    <para>Alternatively, for scripted or non-interactive installations, use the
    following syntax as the
    <systemitem class="username">root</systemitem> user to install one or more
    modules:</para>

<screen role="root"><userinput>cpan -i <replaceable>&lt;Module1::Name&gt; &lt;Module2::Name&gt;</replaceable></userinput></screen>

    <para>Review the <filename>cpan.1</filename> man page for additional
    parameters you can pass to <command>cpan</command> on the command
    line.</para>

  </sect2>

</sect1>
